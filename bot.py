from flask import Flask, request, jsonify
import os
import telebot
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)
bot = telebot.TeleBot(os.environ['TELEGRAM_TOKEN'])

# –ü—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
@app.route('/')
def home():
    return "üé∞ –°–ª–æ—Ç-–±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –î–æ–º–µ–Ω: pystzarabotaet.vercel.app"

@app.route('/api/health')
def health_check():
    return jsonify({"status": "ok", "domain": "pystzarabotaet.vercel.app"})

# –í–µ–±—Ö—É–∫ –¥–ª—è Telegram
@app.route('/api/webhook', methods=['POST'])
def webhook():
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
        if request.headers.get('X-Telegram-Bot-Api-Secret-Token') != os.environ['WEBHOOK_SECRET']:
            logger.warning("–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –≤–µ–±—Ö—É–∫–∞")
            return jsonify({"error": "Unauthorized"}), 403
        
        update = telebot.types.Update.de_json(request.get_json())
        bot.process_new_updates([update])
        return jsonify({"status": "success"}), 200
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤–µ–±—Ö—É–∫–∞: {e}")
        return jsonify({"error": "Internal server error"}), 500

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    try:
        bot.send_message(
            message.chat.id,
            "üéâ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Vercel!\n"
            f"–î–æ–º–µ–Ω: pystzarabotaet.vercel.app\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /spin –¥–ª—è —Ç–µ—Å—Ç–∞ –∏–≥—Ä—ã"
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã start: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /spin (—Ç–µ—Å—Ç–æ–≤–∞—è)
@bot.message_handler(commands=['spin'])
def spin(message):
    try:
        symbols = ['üçí', 'üçã', 'üíé', '7Ô∏è‚É£']
        result = random.choices(symbols, k=3)
        win = "100 (—Ç–µ—Å—Ç)" if len(set(result)) == 1 else "0 (—Ç–µ—Å—Ç)"
        
        bot.send_message(
            message.chat.id,
            f"üé∞ –†–µ–∑—É–ª—å—Ç–∞—Ç: {' '.join(result)}\n"
            f"üí∞ –í—ã–∏–≥—Ä—ã—à: {win}\n\n"
            "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã spin: {e}")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ
if __name__ == '__main__':
    bot.remove_webhook()
    bot.polling(none_stop=True)
else:
    bot.remove_webhook()
    bot.set_webhook(
        url=f"https://pystzarabotaet.vercel.app/api/webhook",
        secret_token=os.environ['WEBHOOK_SECRET']
    )
    logger.info("–í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è Vercel")
